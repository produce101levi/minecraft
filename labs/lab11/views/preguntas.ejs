<%- include('includes/head.ejs') %>
      <div class="box m-6">
      <figure class="image is-3by1">
          <img src="https://i.pinimg.com/originals/24/5c/a6/245ca640095317ecff88ac8b5a995621.jpg">
        </figure>
        <br><h1 class="title">Ingresar preguntas</h1>
        <form action="/submit" method="POST">
          <label class="label" for="question">Pregunta</label>
          <input name ="question" id="question" type="text" class="input"><br>
          <input class="button is-danger" type="submit" value="Preguntar">
        </form>
            <section id="Preguntas">
                <br><h2 class="subtitle"><strong>Preguntas</strong></h2>
                <strong>¿Cuál es la diferencia entre Internet y la World Wide Web?</strong><br>
                El internet es la red de diferentes computadoras conectadas entre sí para
                comunicar información, mientras que la world wide web es un sistema que
                utiliza hipervínculos de acceso a diferentes páginas, así como a la navegación.<br>
                <strong>Cuáles son las partes de un URL?</strong><br>
                Un URL (Uniform Resource Location) se conforma normalmente de:<br>
                <p class="protocolo">1. Un protocolo:</p> Indica cómo acceder al recurso. Ejemplos incluyen
                http o https.<br>
                <p class="dominio">2. Un dominio:</p> Dirección que identifica al recurso.<br>
                <p class="ruta">3. Una ruta:</p> Ubicación exacta del recurso, por ejemplo, "/pagina/ejemplo".<br>
                <p class="parametros">4. Parámetros:</p> Opcionalmente se pueden usar para dar información adicional
                al servidor. Normalmente éstos se ven después de un signo interrogativo "?".<br>
                <p class="ancla">5. Ancla:</p> Especifica una ubicación en la página web a la que se debe despalzar.<br>
                <p><strong class="ejemplo">Ejemplo:</strong><br>
                <small class="protocolo">https://</small><small class="dominio">www.levi.com</small><small class="ruta">/pagina/ejemplo/</small><small class="parametros">?id=143</small><small class="ancla">#leccion7</small></p>
                <strong>¿Cuál es el propósito de los métodos HTTP: GET, HEAD, POST, PUT, PATCH, DELETE?</strong><br>
                1. Get: Solicitar datos del servidor y recuperar información como páginas web.<br>
                2. Head: Solicitar sólo los encabezados de respuesta sin los cuerpos. Verificar encabezados.<br>
                3. Post: Enviar datos al servidor para procesiarlos. Enviar formularios HTML, subir archivos o modificar datos.<br>
                4. Put: Enviar datos al servidor para crear o actualizar un recurso en la ubicación específica.<br>
                5. Patch: Enviar datos al servidor para modificar parcialmente un recurso sin necesidad de reenviarlo todo. <br>
                6. Delete: Eliminar recursos del servidor, como archivos.<br>
                <strong>¿Qué método HTTP se debe utilizar al enviar un formulario HTML, por ejemplo 
                cuando ingresas tu usuario y contraseña en algún sitio? ¿Por qué?</strong><br>
                El método POST, ya que envía los datos al servidor de manera segura, 
                protegiendo la privacidad del usuario. Permite enviar más información.<br>
                <strong>¿Qué método HTTP se utiliza cuando a través de un navegador web se accede a una página a través de un URL?</strong><br>
                Por defecto se usa el método GET.<br>
                <strong>Un servidor web devuelve una respuesta HTTP con código 200. ¿Qué significa esto? 
                ¿Ocurrió algún error?</strong>
                <br>Al contrario. Indica que ha sido exitosa la solicitud. El servidor pudo 
                procesarla con éxito.<br><br>
                <figure class="image is-3by1">
                    <img src="https://wimlds.org/wp-content/uploads/2019/09/NYC.jpg">
                  </figure>
                <br><strong>¿Es responsabilidad del desarrollador corregir un sitio web si un 
                usuario reporta que intentó acceder al sitio y se encontró con un error 404? 
                ¿Por qué?</strong><br>
                Sí es responsabilidad del desarrollador porque debe asegurarse de que todos los
                sitios estén disponibles <em>a menos que</em> el sitio al que el usuario intentó
                ingresar en verdad no exista. <br>
                <strong>¿Es responsabilidad del desarrollador corregir un sitio web si un 
                usuario reporta que intentó acceder al sitio y se encontró con un error 500? 
                ¿Por qué?</strong><br>
                Sí es responsabilidad del desarrollador porque con éste error se reporta que
                ha ocurrido un error en el servidor que impide que se procese la solicitud
                del usuario adecuadamente. En su mayor parte éstos errores vienen por parte
                del mismo servidor, aunque en ocasiones puede ser solucionado si el usuario
                refresca la págica. <br>
                <strong>¿Qué significa que un atributo HTML5 esté depreciado o desaprobado 
                (deprecated)? Menciona algunos elementos de HTML 4 que en HTML5 estén 
                desaprobados. 
                </strong><br>
                Significa que aunque aún funciona el atributo de HTML en los navegadores,
                es obsoleto y es recomendado no usarlo en nuevos desrrollos. Ejemplos incluyen:<br>
                font<br>center<br>strike<br>acronym<br>
                <strong>¿Cuáles son las diferencias principales entre HTML 4 y HTML5?</strong> <br>
                Las diferencias principales incluyen la estrucutra y semántica (HTML5 es un
                lenguaje más semántico en lugar de que el desarrollador tenga que identificar divs),
                multimedia (HTML5 ofrece soporte para audio y video a través de los elementos
                sin necesidad de utilizar terceros como Flash), gráficos y animaciones (en HTML5 
                se pueden integrar éstos elementos utilizando JavaScript en lugar de plugins externos
                como en HTML4), compatibilidad con dispositivos móviles, etc. <br>
                <strong>¿Qué componentes de estructura y estilo tiene una tabla?</strong> <br>
                table, tr, th, td, thead, tbody, tfoot, border, border-collapse,
                border-spacing, width, height, background-color, text-align,
                vertical-align, font-family. <br>
                <strong>¿Cuáles son los principales controles de una forma HTML5?</strong> <br>
                input, textarea, select, button, label, fieldset, legend, datalist, progress, meter, input type. <br>
                <strong>Cuánto apoyo HTML5 tiene Google Chrome?</strong> <br>
                Google Chrome apoya HTML5 en su totalidad.
                <br><strong>¿Cuál es el ciclo de vida de los sistemas de información?</strong><br>
                Planificación, análisis, diseño, desarrollo, implementación, operación y mantenimiento, desactivación.<br>
                <strong>¿Cuál es el ciclo de desarrollo de sistemas de información?</strong><br>
                Identifiación de problemas, estudio de viabilidad, análisis de requisitos,
                diseño de sistemas, implementación de sistema, implementación y despliegue, 
                operación y mantemiento, evaluación y mejora continua, desactivación.
                <br><br><br><strong>Describe el archivo package.json.</strong><br>
                El archivo package.json indica el nombre del proyecto, la versión, la descripción,
                el script principal que será la fuente del JavaScript en el archvio (en éste caso, lab11.js),
                Y los scripts. El script "start" sirve para que en la terminal, mandemos el comando
                "npm start" y con eso inicializar el servidor. 
                <br>El archivo también indica el nombre del autor (Leví Díaz) y la licencia (MIT), así como las
                versiones de EJS, express, body parser que hayan sido instaladas.
                <br><br><br><strong>¿Qué otros templating engines existen para node?</strong><br>
                Jade, Vash, Mustache, Dust.js, Nunjucks, Handlebars, atpl, haml.
            </section>
            <section>
                <br><button class="button is-danger" onclick="alert('Gracias por visitar mi página <3')">Siiii!!</button><br><br>
            </section>
            <div class="columns">
                <div class="column">
                    <figure class="image is-sqaure">
                        <img src="https://image.tensorartassets.com/posts/images/650443986611290600/7b36ddc4-8018-4123-a36c-566008b4df29.jpg">
                    </figure>
                </div>
                <div class="column">
                    <figure class="image is-sqaure">
                        <img src="https://is1-ssl.mzstatic.com/image/thumb/Purple1/v4/40/c8/8f/40c88f1b-c187-c8b5-b04f-658e0e21d561/source/256x256bb.jpg">
                    </figure>
                </div>
                <div class="column">
                    <figure class="image is-sqaure">
                        <img src="https://is2-ssl.mzstatic.com/image/thumb/Purple111/v4/af/7d/6a/af7d6aa5-e8dd-b1a0-14ad-12026c51d561/source/256x256bb.jpg">
                    </figure>
                </div>
                <div class="column">
                    <figure class="image is-sqaure">
                        <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQUvTa2qHZuOzOajJI9t566Kp-Nq4j2bsRw4A&usqp=CAU">
                    </figure>
                </div>
            </div>
            <section>
                <div class="card">
                    <div class="card-content">
                      <div class="content">
                        <em>Material Design</em> es un lenguaje de diseño hecho por
                        Google, introducido en 2014. Utiliza lay-outs de cuadrícula, 
                        animaciones y transiciones, y efectos como sombras en sus
                        elementos. La interfaz moderna es apoyada por éstos elementos,
                        así como sus colores vibrantes y fuentes características.
                      </div>
                    </div>
                  </div>
            </section>
<%- include('includes/foot.ejs') %>